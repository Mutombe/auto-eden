# Generated by Django 5.1.7 on 2025-07-11 15:02

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TestUpload",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("test_file", models.FileField(upload_to="test_uploads/")),
            ],
            options={
                "verbose_name": "Test Upload",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("approval", "Vehicle Approval"),
                            ("rejection", "Vehicle Rejection"),
                            ("registration", "New Registration"),
                            ("instant_sale", "Instant Sale Upload"),
                            ("bid", "New Bid"),
                            ("admin_alert", "Admin Alert"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                (
                    "related_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=15)),
                ("first_name", models.CharField(blank=True, max_length=100)),
                ("last_name", models.CharField(blank=True, max_length=100)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_digitally_verified", models.BooleanField(default=False)),
                ("is_physically_verified", models.BooleanField(default=False)),
                ("is_rejected", models.BooleanField(default=False)),
                ("digitally_verified_at", models.DateTimeField(blank=True, null=True)),
                ("physically_verified_at", models.DateTimeField(blank=True, null=True)),
                ("rejected_at", models.DateTimeField(blank=True, null=True)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="No description provided", null=True
                    ),
                ),
                ("make", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
                (
                    "vin",
                    models.CharField(
                        db_index=True,
                        help_text="Vehicle Identification Number",
                        max_length=17,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2026),
                        ]
                    ),
                ),
                (
                    "mileage",
                    models.PositiveIntegerField(
                        help_text="Current vehicle mileage in kilometers"
                    ),
                ),
                (
                    "proposed_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Price you expect for instant sale",
                        max_digits=10,
                        null=True,
                        verbose_name="Asking Price",
                    ),
                ),
                ("is_visible", models.BooleanField(default=True)),
                (
                    "verification_state",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("digital", "Digitally Verified"),
                            ("physical", "Physically Verified"),
                            ("rejected", "Rejected"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "listing_type",
                    models.CharField(
                        choices=[
                            ("marketplace", "Marketplace"),
                            ("instant_sale", "Instant Sale"),
                        ],
                        max_length=20,
                    ),
                ),
                ("fuel_type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "digitally_verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="digital_verifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "physically_verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="physical_verifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuoteRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                ("country", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("address", models.TextField()),
                ("telephone", models.CharField(max_length=20)),
                ("note", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_processed", models.BooleanField(default=False)),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quote_requests",
                        to="core.vehicle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, default="No message provided"),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "bidder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bids",
                        to="core.vehicle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="vehicle_images/")),
                (
                    "vehicle",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="core.vehicle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleSearch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("make", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
                ("min_year", models.PositiveIntegerField()),
                ("max_year", models.PositiveIntegerField()),
                ("max_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("max_mileage", models.PositiveIntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("matched", "Matched"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_matched", models.DateTimeField(blank=True, null=True)),
                ("match_count", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Vehicle Searches",
            },
        ),
        migrations.AddIndex(
            model_name="vehicle",
            index=models.Index(
                fields=["is_digitally_verified", "is_physically_verified"],
                name="core_vehicl_is_digi_c762f8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vehicle",
            index=models.Index(
                fields=["listing_type", "is_visible"],
                name="core_vehicl_listing_2578c7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vehicle",
            index=models.Index(
                fields=["make", "model"], name="core_vehicl_make_660e6b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vehicle",
            index=models.Index(fields=["price"], name="core_vehicl_price_eaa28f_idx"),
        ),
        migrations.AddIndex(
            model_name="vehicle",
            index=models.Index(
                fields=["created_at"], name="core_vehicl_created_b6d742_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="vehicle",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("verification_state", "rejected"), _negated=True),
                    ("rejection_reason__isnull", False),
                    _connector="OR",
                ),
                name="rejection_requires_reason",
            ),
        ),
        migrations.AddConstraint(
            model_name="vehicle",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("listing_type", "marketplace"), ("price__isnull", False)),
                    models.Q(
                        ("listing_type", "instant_sale"),
                        ("proposed_price__isnull", False),
                    ),
                    _connector="OR",
                ),
                name="valid_pricing_for_listing_type",
            ),
        ),
    ]
